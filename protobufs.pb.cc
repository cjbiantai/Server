// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufs.proto

#include "protobufs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
      _instance;
} _UserInfo_default_instance_;
class ResponseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseInfo>
      _instance;
} _ResponseInfo_default_instance_;
class PlayerInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerInput>
      _instance;
} _PlayerInput_default_instance_;
class FrameDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameData>
      _instance;
} _FrameData_default_instance_;
namespace protobuf_protobufs_2eproto {
void InitDefaultsUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserInfo_default_instance_;
    new (ptr) ::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserInfo::InitAsDefaultInstance();
}

void InitDefaultsUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserInfoImpl);
}

void InitDefaultsResponseInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ResponseInfo_default_instance_;
    new (ptr) ::ResponseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResponseInfo::InitAsDefaultInstance();
}

void InitDefaultsResponseInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseInfoImpl);
}

void InitDefaultsPlayerInputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerInput_default_instance_;
    new (ptr) ::PlayerInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerInput::InitAsDefaultInstance();
}

void InitDefaultsPlayerInput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerInputImpl);
}

void InitDefaultsFrameDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protobufs_2eproto::InitDefaultsPlayerInput();
  {
    void* ptr = &::_FrameData_default_instance_;
    new (ptr) ::FrameData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FrameData::InitAsDefaultInstance();
}

void InitDefaultsFrameData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFrameDataImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserInfo, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserInfo, user_password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseInfo, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseInfo, response_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponseInfo, yourfd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerInput, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerInput, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerInput, hori_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerInput, vect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerInput, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerInput, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameData, frameno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameData, playerinput_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::UserInfo)},
  { 7, -1, sizeof(::ResponseInfo)},
  { 15, -1, sizeof(::PlayerInput)},
  { 26, -1, sizeof(::FrameData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FrameData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "protobufs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017protobufs.proto\"4\n\010UserInfo\022\021\n\tuser_na"
      "me\030\001 \001(\t\022\025\n\ruser_password\030\002 \001(\t\"D\n\014Respo"
      "nseInfo\022\017\n\007message\030\001 \001(\t\022\023\n\013response_id\030"
      "\002 \001(\005\022\016\n\006yourfd\030\003 \001(\005\"g\n\013PlayerInput\022\022\n\n"
      "playerName\030\001 \001(\t\022\013\n\003yaw\030\002 \001(\005\022\014\n\004hori\030\003 "
      "\001(\005\022\014\n\004vect\030\004 \001(\005\022\r\n\005speed\030\005 \001(\005\022\014\n\004type"
      "\030\006 \001(\005\"\?\n\tFrameData\022\017\n\007frameNo\030\001 \001(\005\022!\n\013"
      "playerInput\030\002 \001(\0132\014.PlayerInputb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 319);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobufs.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protobufs_2eproto

// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserNameFieldNumber;
const int UserInfo::kUserPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protobufs_2eproto::InitDefaultsUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  user_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_password().size() > 0) {
    user_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_);
  }
  // @@protoc_insertion_point(copy_constructor:UserInfo)
}

void UserInfo::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  ::protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  ::protobuf_protobufs_2eproto::InitDefaultsUserInfo();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserInfo.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_password().data(), static_cast<int>(this->user_password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserInfo.user_password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // string user_password = 2;
  if (this->user_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password().data(), static_cast<int>(this->user_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.user_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // string user_password = 2;
  if (this->user_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password().data(), static_cast<int>(this->user_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.user_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_name = 1;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string user_password = 2;
  if (this->user_password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.user_password().size() > 0) {

    user_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_);
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  user_name_.Swap(&other->user_name_);
  user_password_.Swap(&other->user_password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResponseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseInfo::kMessageFieldNumber;
const int ResponseInfo::kResponseIdFieldNumber;
const int ResponseInfo::kYourfdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseInfo::ResponseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protobufs_2eproto::InitDefaultsResponseInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResponseInfo)
}
ResponseInfo::ResponseInfo(const ResponseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&response_id_, &from.response_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&yourfd_) -
    reinterpret_cast<char*>(&response_id_)) + sizeof(yourfd_));
  // @@protoc_insertion_point(copy_constructor:ResponseInfo)
}

void ResponseInfo::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yourfd_) -
      reinterpret_cast<char*>(&response_id_)) + sizeof(yourfd_));
  _cached_size_ = 0;
}

ResponseInfo::~ResponseInfo() {
  // @@protoc_insertion_point(destructor:ResponseInfo)
  SharedDtor();
}

void ResponseInfo::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseInfo::descriptor() {
  ::protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseInfo& ResponseInfo::default_instance() {
  ::protobuf_protobufs_2eproto::InitDefaultsResponseInfo();
  return *internal_default_instance();
}

ResponseInfo* ResponseInfo::New(::google::protobuf::Arena* arena) const {
  ResponseInfo* n = new ResponseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ResponseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yourfd_) -
      reinterpret_cast<char*>(&response_id_)) + sizeof(yourfd_));
  _internal_metadata_.Clear();
}

bool ResponseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResponseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseInfo.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 response_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 yourfd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yourfd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResponseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResponseInfo)
  return false;
#undef DO_
}

void ResponseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResponseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseInfo.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // int32 response_id = 2;
  if (this->response_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->response_id(), output);
  }

  // int32 yourfd = 3;
  if (this->yourfd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->yourfd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResponseInfo)
}

::google::protobuf::uint8* ResponseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResponseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseInfo.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // int32 response_id = 2;
  if (this->response_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->response_id(), target);
  }

  // int32 yourfd = 3;
  if (this->yourfd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->yourfd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResponseInfo)
  return target;
}

size_t ResponseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResponseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 response_id = 2;
  if (this->response_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_id());
  }

  // int32 yourfd = 3;
  if (this->yourfd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yourfd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResponseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResponseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResponseInfo)
    MergeFrom(*source);
  }
}

void ResponseInfo::MergeFrom(const ResponseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResponseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.response_id() != 0) {
    set_response_id(from.response_id());
  }
  if (from.yourfd() != 0) {
    set_yourfd(from.yourfd());
  }
}

void ResponseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResponseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseInfo::CopyFrom(const ResponseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResponseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseInfo::IsInitialized() const {
  return true;
}

void ResponseInfo::Swap(ResponseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseInfo::InternalSwap(ResponseInfo* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(response_id_, other->response_id_);
  swap(yourfd_, other->yourfd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseInfo::GetMetadata() const {
  protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerInput::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInput::kPlayerNameFieldNumber;
const int PlayerInput::kYawFieldNumber;
const int PlayerInput::kHoriFieldNumber;
const int PlayerInput::kVectFieldNumber;
const int PlayerInput::kSpeedFieldNumber;
const int PlayerInput::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInput::PlayerInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protobufs_2eproto::InitDefaultsPlayerInput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerInput)
}
PlayerInput::PlayerInput(const PlayerInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&yaw_, &from.yaw_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&yaw_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:PlayerInput)
}

void PlayerInput::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&yaw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&yaw_)) + sizeof(type_));
  _cached_size_ = 0;
}

PlayerInput::~PlayerInput() {
  // @@protoc_insertion_point(destructor:PlayerInput)
  SharedDtor();
}

void PlayerInput::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInput::descriptor() {
  ::protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerInput& PlayerInput::default_instance() {
  ::protobuf_protobufs_2eproto::InitDefaultsPlayerInput();
  return *internal_default_instance();
}

PlayerInput* PlayerInput::New(::google::protobuf::Arena* arena) const {
  PlayerInput* n = new PlayerInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerInput::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&yaw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&yaw_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool PlayerInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string playerName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), static_cast<int>(this->playername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlayerInput.playerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 yaw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hori = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hori_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerInput)
  return false;
#undef DO_
}

void PlayerInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string playerName = 1;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlayerInput.playerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playername(), output);
  }

  // int32 yaw = 2;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->yaw(), output);
  }

  // int32 hori = 3;
  if (this->hori() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hori(), output);
  }

  // int32 vect = 4;
  if (this->vect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vect(), output);
  }

  // int32 speed = 5;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->speed(), output);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerInput)
}

::google::protobuf::uint8* PlayerInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string playerName = 1;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlayerInput.playerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playername(), target);
  }

  // int32 yaw = 2;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->yaw(), target);
  }

  // int32 hori = 3;
  if (this->hori() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hori(), target);
  }

  // int32 vect = 4;
  if (this->vect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vect(), target);
  }

  // int32 speed = 5;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->speed(), target);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerInput)
  return target;
}

size_t PlayerInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerInput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string playerName = 1;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // int32 yaw = 2;
  if (this->yaw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yaw());
  }

  // int32 hori = 3;
  if (this->hori() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hori());
  }

  // int32 vect = 4;
  if (this->vect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vect());
  }

  // int32 speed = 5;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  // int32 type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerInput)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerInput)
    MergeFrom(*source);
  }
}

void PlayerInput::MergeFrom(const PlayerInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.hori() != 0) {
    set_hori(from.hori());
  }
  if (from.vect() != 0) {
    set_vect(from.vect());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PlayerInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInput::CopyFrom(const PlayerInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInput::IsInitialized() const {
  return true;
}

void PlayerInput::Swap(PlayerInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInput::InternalSwap(PlayerInput* other) {
  using std::swap;
  playername_.Swap(&other->playername_);
  swap(yaw_, other->yaw_);
  swap(hori_, other->hori_);
  swap(vect_, other->vect_);
  swap(speed_, other->speed_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerInput::GetMetadata() const {
  protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrameData::InitAsDefaultInstance() {
  ::_FrameData_default_instance_._instance.get_mutable()->playerinput_ = const_cast< ::PlayerInput*>(
      ::PlayerInput::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameData::kFrameNoFieldNumber;
const int FrameData::kPlayerInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameData::FrameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protobufs_2eproto::InitDefaultsFrameData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FrameData)
}
FrameData::FrameData(const FrameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerinput()) {
    playerinput_ = new ::PlayerInput(*from.playerinput_);
  } else {
    playerinput_ = NULL;
  }
  frameno_ = from.frameno_;
  // @@protoc_insertion_point(copy_constructor:FrameData)
}

void FrameData::SharedCtor() {
  ::memset(&playerinput_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frameno_) -
      reinterpret_cast<char*>(&playerinput_)) + sizeof(frameno_));
  _cached_size_ = 0;
}

FrameData::~FrameData() {
  // @@protoc_insertion_point(destructor:FrameData)
  SharedDtor();
}

void FrameData::SharedDtor() {
  if (this != internal_default_instance()) delete playerinput_;
}

void FrameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameData::descriptor() {
  ::protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrameData& FrameData::default_instance() {
  ::protobuf_protobufs_2eproto::InitDefaultsFrameData();
  return *internal_default_instance();
}

FrameData* FrameData::New(::google::protobuf::Arena* arena) const {
  FrameData* n = new FrameData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameData::Clear() {
// @@protoc_insertion_point(message_clear_start:FrameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && playerinput_ != NULL) {
    delete playerinput_;
  }
  playerinput_ = NULL;
  frameno_ = 0;
  _internal_metadata_.Clear();
}

bool FrameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FrameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 frameNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frameno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PlayerInput playerInput = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerinput()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FrameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FrameData)
  return false;
#undef DO_
}

void FrameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FrameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameNo = 1;
  if (this->frameno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frameno(), output);
  }

  // .PlayerInput playerInput = 2;
  if (this->has_playerinput()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->playerinput_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FrameData)
}

::google::protobuf::uint8* FrameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FrameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameNo = 1;
  if (this->frameno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frameno(), target);
  }

  // .PlayerInput playerInput = 2;
  if (this->has_playerinput()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->playerinput_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrameData)
  return target;
}

size_t FrameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrameData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .PlayerInput playerInput = 2;
  if (this->has_playerinput()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->playerinput_);
  }

  // int32 frameNo = 1;
  if (this->frameno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frameno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FrameData)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FrameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FrameData)
    MergeFrom(*source);
  }
}

void FrameData::MergeFrom(const FrameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FrameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerinput()) {
    mutable_playerinput()->::PlayerInput::MergeFrom(from.playerinput());
  }
  if (from.frameno() != 0) {
    set_frameno(from.frameno());
  }
}

void FrameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FrameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameData::CopyFrom(const FrameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameData::IsInitialized() const {
  return true;
}

void FrameData::Swap(FrameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameData::InternalSwap(FrameData* other) {
  using std::swap;
  swap(playerinput_, other->playerinput_);
  swap(frameno_, other->frameno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameData::GetMetadata() const {
  protobuf_protobufs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
